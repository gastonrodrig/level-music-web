name: Deploy Frontend to Cloud Run

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Clona el repositorio
      - name: Checkout source
        uses: actions/checkout@v3

      # 2. Autentica en GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3. Configura gcloud con tu proyecto
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # 4. Fija la regiÃ³n por defecto para Cloud Run
      - name: Set default Cloud Run region
        run: gcloud config set run/region ${{ secrets.GCP_REGION }}

      # 5. Configura Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 6. Instala dependencias y construye el proyecto
      - name: Install deps & build
        run: |
          npm ci
          # Bake env vars into the build
          echo "VITE_BASE_URL=${{ secrets.VITE_BASE_URL }}"         >> $GITHUB_ENV
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}" >> $GITHUB_ENV
          npm run build

      # 7. Se autentica en Google Container Registry
      - name: Log in to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      # 8. Construye y sube la imagen Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/lm-frontend:${{ github.sha }}

      # 9. Despliega en Cloud Run
      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: lm-frontend
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          region: ${{ secrets.GCP_REGION }}
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/lm-frontend:${{ github.sha }}
